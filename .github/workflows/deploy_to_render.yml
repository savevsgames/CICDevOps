name: Deploy To Render

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  deploy:
    name: Deploy to Render
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Ensure the source branch is develop
        run: |
          if [[ "${{ github.event.pull_request.head.ref }}" != "develop" ]]; then
            echo "Pull requests to main must come from the develop branch. Exiting."
            exit 1
          fi

      # Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Build and Install for Render
      - name: Render Build (Install and Build)
        run: npm run render-build

      # Make sure the pull request is to the main branch - troubleshooting step
      - name: Debug Ref Information
        run: |
          echo "github.ref: ${{ github.ref }}"
          echo "github.event.pull_request.base.ref: ${{ github.event.pull_request.base.ref }}"

      # Deploy to Render
      - name: Deploy to Render
        if: github.event.pull_request.base.ref == 'main'
        env:
          deploy_url: ${{ secrets.RENDER_URL }}
        run: |
          curl "$deploy_url"

      # Wait for Render Deployment
      - name: Wait for Render Deployment
        run: sleep 120 # Adjust if needed

      # Run Cypress e2e Tests on Render
      - name: Run e2e Cypress Tests
        env:
          CYPRESS_BASE_URL: "https://cicdevops.onrender.com"
        run: |
          mkdir -p cypress/reports  
          npm run test \
          --reporter mochawesome \
           --reporter-options "reportDir=cypress/reports,reportFilename=results-e2e-${{ matrix.node-version }},overwrite=true,html=false,json=true"

      # Test summary output and JSON report
      - name: Print Mochawesome JSON
        run: cat cypress/reports/results-e2e-${{ matrix.node-version }}.json

      - name: Generate Test Summary
        run: |
          RESULTS_FILE=cypress/reports/results-e2e-${{ matrix.node-version }}.json
          if [ ! -f "$RESULTS_FILE" ]; then
            echo "Cypress results JSON file not found. Ensure results-e2e-${{ matrix.node-version }} is configured correctly."
            exit 1
          fi

          TEST_RESULTS=$(cat $RESULTS_FILE | jq -r '.stats')
          PASSED=$(echo $TEST_RESULTS | jq -r '.passes')
          FAILED=$(echo $TEST_RESULTS | jq -r '.failures')
          PENDING=$(echo $TEST_RESULTS | jq -r '.pending')
          SKIPPED=$(echo $TEST_RESULTS | jq -r '.skipped // 0') # Default to 0 if skipped is missing
          DURATION=$(echo $TEST_RESULTS | jq -r '.duration / 1000')

          echo '## Cypress Results for Node.js ${{ matrix.node-version }}' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '| Result     | Passed ✅ | Failed ❌ | Pending 🙋 | Skipped 🔀 | Duration ⏱ |' >> $GITHUB_STEP_SUMMARY
          echo '|------------|-----------|-----------|------------|------------|-------------|' >> $GITHUB_STEP_SUMMARY
          echo "| **Tests**  | $PASSED    | $FAILED    | $PENDING     | $SKIPPED     | ${DURATION}s |" >> $GITHUB_STEP_SUMMARY

      # Upload the artifact - test results JSON
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: cypress/reports/results-e2e-${{ matrix.node-version }}.json

  # Final Status Job to Update GitHub Status
  final-status:
    name: Final Status
    runs-on: ubuntu-24.04
    needs: deploy
    steps:
      - name: Report Final Status to GitHub
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/check-runs \
          -d '{
            "name": "Deploy to Render",
            "head_sha": "'${{ github.sha }}'",
            "status": "completed",
            "conclusion": "success",
            "output": {
              "title": "All tests passed",
              "summary": "The e2e Cypress tests on the Render deployment were completed successfully."
            }
          }'
