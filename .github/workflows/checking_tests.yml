name: Checking Tests

on:
  pull_request:
    branches:
      - develop

jobs:
  test:
    name: Checking Tests
    runs-on: ubuntu-24.04

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Step 3: Build project
      - name: Render Build (Install and Build)
        run: npm run render-build

      # Step 4: Start the Vite server
      - name: Start server
        run: |
          npm run start &
          npx wait-on http://localhost:3001

      # Step 5: Run Cypress component tests
      - name: Run Cypress Component Tests for Node.js ${{ matrix.node-version }}
        env:
          NODE_VERSION: "${{ matrix.node-version }}"
        run: |
          mkdir -p test_logs
          npx cypress run --component \
          --reporter mochawesome \
          --reporter-options "reportDir=test_logs,reportFilename=results-${{ env.NODE_VERSION }},overwrite=true,html=false,json=true"

      # Step 6: Parse results and generate summary
      - name: Parse and Generate Test Summary
        run: |
          RESULTS_FILE=test_logs/results-${{ matrix.node-version }}.json
          if [ ! -f "$RESULTS_FILE" ]; then
            echo "Cypress results JSON file not found. Ensure results-${{ matrix.node-version }}.json is configured correctly."
            exit 1
          fi

          TEST_RESULTS=$(cat $RESULTS_FILE | jq -r '.stats | {passed: .tests, failed: .failures, pending: .pending, skipped: .skipped, duration: (.duration / 1000)}')
          PASSED=$(echo $TEST_RESULTS | jq -r '.passed')
          FAILED=$(echo $TEST_RESULTS | jq -r '.failed')
          PENDING=$(echo $TEST_RESULTS | jq -r '.pending')
          SKIPPED=$(echo $TEST_RESULTS | jq -r '.skipped')
          DURATION=$(echo $TEST_RESULTS | jq -r '.duration')

          echo '### Cypress Component Test Results for Node.js ${{ matrix.node-version }}' >> test_logs/summary.txt
          echo '| Node Version | Passed ✅ | Failed ❌ | Pending 🙋 | Skipped 🔀 | Duration ⏱ |' >> test_logs/summary.txt
          echo '|--------------|-----------|-----------|------------|------------|-------------|' >> test_logs/summary.txt
          echo "| ${{ matrix.node-version }} | $PASSED | $FAILED | $PENDING | $SKIPPED | ${DURATION}s |" >> test_logs/summary.txt

      # Step 7: Upload logs
      - name: Upload Test Logs for Node.js ${{ matrix.node-version }}
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.node-version }}
          path: test_logs/results-${{ matrix.node-version }}.json

      # Step 8: Stop the Vite server
      - name: Stop server
        run: kill $(lsof -t -i:3001) || true

  # Final job to aggregate results and report
  final-status:
    name: Final Status
    runs-on: ubuntu-24.04
    needs: test

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Aggregate results
      - name: Aggregate Results
        run: |
          echo "## Aggregate Test Summary" > aggregate-summary.txt
          echo "" >> aggregate-summary.txt
          cat test_logs/summary.txt >> aggregate-summary.txt

      # Step 3: Print the summary
      - name: Print Aggregate Summary
        run: cat aggregate-summary.txt

      # Step 4: Upload final test summary
      - name: Upload Final Test Summary
        uses: actions/upload-artifact@v4
        with:
          name: aggregate-summary
          path: aggregate-summary.txt

      # Step 5: Report Final Status to GitHub
      - name: Report Final Status to GitHub
        run: |
          curl -X POST \
          -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/${{ github.repository }}/check-runs \
          -d '{
            "name": "Checking Tests",
            "head_sha": "'${{ github.sha }}'",
            "status": "completed",
            "conclusion": "success",
            "output": {
              "title": "All tests passed",
              "summary": "The Cypress component tests were completed successfully for all Node.js versions."
            }
          }'
