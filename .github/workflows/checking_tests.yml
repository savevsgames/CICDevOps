name: Checking Tests

on:
  pull_request:
    branches:
      - develop

jobs:
  test:
    name: Checking Tests
    runs-on: ubuntu-latest
    # Define a Strategy matrix to run the same job-steps multiple times in parallel with different configurations
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }} # Use the node version from the matrix

      - name: Install dependencies
        run: npm install

      - name: Build project
        run: npm run build

      # Start the server in the background
      - name: Start server
        run: |
          npm run start &
          npx wait-on http://localhost:3001

      # Run Cypress tests and generate JSON report file for each node version in test matrix
      # Added --config for base url to be localhost:3001 for local component testing
      - name: Run Cypress Tests
        run: |
          mkdir -p cypress/reports
          npx cypress run --component \
          --reporter mochawesome \
          --reporter-options reportDir=cypress/reports,overwrite=true,html=false,json=true \
          --config baseUrl=http://localhost:3001

      - name: Print Mochawesome JSON
        run: cat cypress/reports/mochawesome.json

      - name: Generate Test Summary
        run: |
          TEST_RESULTS=$(cat cypress/reports/mochawesome.json | jq -r '.stats')
          PASSED=$(echo $TEST_RESULTS | jq -r '.passes')
          FAILED=$(echo $TEST_RESULTS | jq -r '.failures')
          PENDING=$(echo $TEST_RESULTS | jq -r '.pending')
          SKIPPED=$(echo $TEST_RESULTS | jq -r '.skipped // 0') # Default to 0 if skipped is missing
          DURATION=$(echo $TEST_RESULTS | jq -r '.duration / 1000')

          echo '## Cypress Results for Node.js ${{ matrix.node-version }}' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '| Result     | Passed ✅ | Failed ❌ | Pending 🙋 | Skipped 🔀 | Duration ⏱ |' >> $GITHUB_STEP_SUMMARY
          echo '|------------|-----------|-----------|------------|------------|-------------|' >> $GITHUB_STEP_SUMMARY
          echo "| **Tests**  | $PASSED    | $FAILED    | $PENDING     | $SKIPPED     | ${DURATION}s |" >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '**Job summary generated at run-time.**' >> $GITHUB_STEP_SUMMARY

      - name: Stop server
        run: kill $(lsof -t -i:3001) || true
